class Solution {
    public int differenceOfSums(int n, int m) {
        // given the range, find the numbers not divisible by m AND divisible by m 
        // sum those integers in their own arrays respectively
        // subtract one sum from the other
        // the sum of n numbers always subtracts the sum of m from itself
        int sum1 = 0;
        int sum2 = 0;
        int nums1[] = new int[n]; 
        int index1 = 0;
        int nums2[] = new int[n];
        int index2 = 0;

        for (int i = 1; i <= n; i++) {
            if (i % m != 0) {
                nums1[index1] = i;
                index1++;
                //System.out.println(index1);
            }
        }
        for (int i = 0; i < nums1.length; i++) {
            //System.out.println(nums1[i]);
            sum1 += nums1[i];
        }
        for (int j = 1; j <= n; j++) {
            if (j % m == 0) {
                nums2[index2] = j;
                index2++; 
            }
        }
        for (int j = 0; j < nums2.length; j++) {
            //System.out.println(nums2[j]);
            sum2 += nums2[j];
        }
        
    return sum1 - sum2;
    }
}

// solved in 15:31